name: Publish Next Package to NPM

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: check
        run: |
          PREV_VERSION=$(git show HEAD^:package.json | grep '"version":' | cut -d'"' -f4)
          CURR_VERSION=$(grep '"version":' package.json | cut -d'"' -f4)
          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  publish-next:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install PNPM
        uses: pnpm/action-setup@v2

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and lint
        run: |
          pnpm build
          pnpm lint -c .eslintrc.prepublish.js nodes credentials package.json

      - name: Publish to NPM with next tag
        run: pnpm publish --no-git-checks --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
