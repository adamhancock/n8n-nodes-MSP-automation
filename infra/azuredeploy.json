{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "8872843047228219157"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "n8n",
      "metadata": {
        "description": "The base name for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "postgresAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The administrator username for the PostgreSQL server"
      }
    },
    "postgresAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator password for the PostgreSQL server"
      }
    },
    "n8nEncryptionKey": {
      "type": "securestring",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The encryption key for n8n"
      }
    },
    "n8nContainerImage": {
      "type": "string",
      "defaultValue": "docker.io/n8nio/n8n:latest",
      "metadata": {
        "description": "The n8n container image to use"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "application": "n8n",
        "environment": "production"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "vnetName": "[format('{0}-vnet-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
    "logAnalyticsName": "[format('{0}-logs-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
    "containerAppEnvName": "[format('{0}-env-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
    "postgresServerName": "[format('{0}-pg-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
    "n8nContainerAppName": "[format('{0}-app-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
    "postgresDnsZoneName": "privatelink.postgres.database.azure.com",
    "postgresPrivateEndpointName": "[format('{0}-pg-pe-{1}', parameters('baseName'), variables('uniqueSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "networking-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "7369201502854470093"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the virtual network"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "The address prefix for the virtual network"
              }
            },
            "containerAppsSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/23",
              "metadata": {
                "description": "The address prefix for the container apps subnet"
              }
            },
            "privateEndpointsSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.2.0/24",
              "metadata": {
                "description": "The address prefix for the private endpoints subnet"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-05-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "container-apps-subnet",
                    "properties": {
                      "addressPrefix": "[parameters('containerAppsSubnetAddressPrefix')]",
                      "delegations": [
                        {
                          "name": "Microsoft.App.environments",
                          "properties": {
                            "serviceName": "Microsoft.App/environments"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "private-endpoints-subnet",
                    "properties": {
                      "addressPrefix": "[parameters('privateEndpointsSubnetAddressPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "containerAppsSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'container-apps-subnet')]"
            },
            "privateEndpointsSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'private-endpoints-subnet')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "log-analytics-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('logAnalyticsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "4348822012549674056"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Log Analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "The SKU of the Log Analytics workspace"
              }
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "The number of days to retain data in the Log Analytics workspace"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                },
                "retentionInDays": "[parameters('retentionInDays')]",
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                  "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-app-environment-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('containerAppEnvName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'log-analytics-deployment'), '2022-09-01').outputs.id.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "615487601216731167"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Container App Environment"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "The Log Analytics workspace ID to use for logging"
              }
            },
            "infrastructureSubnetId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The subnet ID to use for the Container App Environment"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(parameters('logAnalyticsWorkspaceId'), '2021-06-01').customerId]",
                    "sharedKey": "[listKeys(parameters('logAnalyticsWorkspaceId'), '2021-06-01').primarySharedKey]"
                  }
                },
                "infrastructureResourceGroup": "[format('{0}-infra', resourceGroup().name)]",
                "vnetConfiguration": "[if(not(empty(parameters('infrastructureSubnetId'))), createObject('infrastructureSubnetId', parameters('infrastructureSubnetId'), 'internal', false()), null())]",
                "zoneRedundant": false
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2023-05-01').defaultDomain]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'log-analytics-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgresql-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serverName": {
            "value": "[variables('postgresServerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "administratorLogin": {
            "value": "[parameters('postgresAdminUsername')]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('postgresAdminPassword')]"
          },
          "databaseName": {
            "value": "n8n"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "6557313102945999861"
            }
          },
          "parameters": {
            "serverName": {
              "type": "string",
              "metadata": {
                "description": "The name of the PostgreSQL server"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "administratorLogin": {
              "type": "string",
              "metadata": {
                "description": "The administrator username for the PostgreSQL server"
              }
            },
            "administratorLoginPassword": {
              "type": "securestring",
              "metadata": {
                "description": "The administrator password for the PostgreSQL server"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            },
            "postgresqlVersion": {
              "type": "string",
              "defaultValue": "14",
              "allowedValues": [
                "11",
                "12",
                "13",
                "14",
                "15"
              ],
              "metadata": {
                "description": "The PostgreSQL version"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard_B1ms",
              "metadata": {
                "description": "The SKU name for the PostgreSQL server"
              }
            },
            "storageSizeGB": {
              "type": "int",
              "defaultValue": 32,
              "metadata": {
                "description": "The storage size for the PostgreSQL server in MB"
              }
            },
            "backupRetentionDays": {
              "type": "int",
              "defaultValue": 7,
              "minValue": 7,
              "maxValue": 35,
              "metadata": {
                "description": "The backup retention days for the PostgreSQL server"
              }
            },
            "databaseName": {
              "type": "string",
              "defaultValue": "n8n",
              "metadata": {
                "description": "The database name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2022-12-01",
              "name": "[parameters('serverName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[if(contains(parameters('skuName'), 'Burstable'), 'Burstable', if(contains(parameters('skuName'), 'Standard'), 'GeneralPurpose', 'MemoryOptimized'))]"
              },
              "properties": {
                "version": "[parameters('postgresqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storage": {
                  "storageSizeGB": "[parameters('storageSizeGB')]"
                },
                "backup": {
                  "backupRetentionDays": "[parameters('backupRetentionDays')]",
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "network": {
                  "publicNetworkAccess": "Disabled"
                }
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', parameters('serverName'), parameters('databaseName'))]",
              "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
              ]
            }
          ],
          "outputs": {
            "connectionString": {
              "type": "string",
              "metadata": {
                "description": "The connection string for the PostgreSQL database"
              },
              "value": "[format('postgresql://{0}:{1}@{2}:5432/{3}', parameters('administratorLogin'), parameters('administratorLoginPassword'), reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName')), '2022-12-01').fullyQualifiedDomainName, parameters('databaseName'))]"
            },
            "serverName": {
              "type": "string",
              "value": "[parameters('serverName')]"
            },
            "serverFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName')), '2022-12-01').fullyQualifiedDomainName]"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('databaseName')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgres-dns-zone-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('postgresDnsZoneName')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2022-09-01').outputs.vnetId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "14288211231272330665"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the private DNS zone"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the virtual network to link with the private DNS zone"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('name')]",
              "location": "global",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('name'), format('link-{0}', uniqueString(parameters('vnetId'))))]",
              "location": "global",
              "tags": "[parameters('tags')]",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networking-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgres-private-endpoint-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('postgresPrivateEndpointName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "privateConnectionResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql-deployment'), '2022-09-01').outputs.id.value]"
          },
          "groupId": {
            "value": "postgresqlServer"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2022-09-01').outputs.privateEndpointsSubnetId.value]"
          },
          "privateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgres-dns-zone-deployment'), '2022-09-01').outputs.id.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "7146032965189484874"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the private endpoint"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "privateConnectionResourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the resource to connect to"
              }
            },
            "groupId": {
              "type": "string",
              "metadata": {
                "description": "The group ID of the resource to connect to"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "The subnet ID to deploy the private endpoint in"
              }
            },
            "privateDnsZoneId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The private DNS zone ID to link with the private endpoint"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('name')]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateConnectionResourceId')]",
                      "groupIds": [
                        "[parameters('groupId')]"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              }
            },
            {
              "condition": "[not(empty(parameters('privateDnsZoneId')))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networking-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'postgres-dns-zone-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'postgresql-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "n8n-container-app-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('n8nContainerAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "containerAppEnvironmentId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-app-environment-deployment'), '2022-09-01').outputs.id.value]"
          },
          "containerImage": {
            "value": "[parameters('n8nContainerImage')]"
          },
          "postgresConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql-deployment'), '2022-09-01').outputs.connectionString.value]"
          },
          "encryptionKey": {
            "value": "[parameters('n8nEncryptionKey')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "1779183095533502976"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Container App"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources"
              }
            },
            "containerAppEnvironmentId": {
              "type": "string",
              "metadata": {
                "description": "The Container App Environment ID"
              }
            },
            "containerImage": {
              "type": "string",
              "defaultValue": "docker.io/n8nio/n8n:latest",
              "metadata": {
                "description": "The n8n container image to use"
              }
            },
            "cpuCore": {
              "type": "string",
              "defaultValue": "1.0",
              "metadata": {
                "description": "The CPU cores allocated to the container app"
              }
            },
            "memorySize": {
              "type": "string",
              "defaultValue": "2.0",
              "metadata": {
                "description": "The memory allocated to the container app in GB"
              }
            },
            "minReplicas": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The minimum number of replicas"
              }
            },
            "maxReplicas": {
              "type": "int",
              "defaultValue": 3,
              "metadata": {
                "description": "The maximum number of replicas"
              }
            },
            "postgresConnectionString": {
              "type": "securestring",
              "metadata": {
                "description": "The PostgreSQL connection string"
              }
            },
            "encryptionKey": {
              "type": "securestring",
              "metadata": {
                "description": "The encryption key for n8n"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to the resources"
              }
            },
            "port": {
              "type": "int",
              "defaultValue": 5678,
              "metadata": {
                "description": "The port that n8n listens on"
              }
            },
            "ingressEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Whether to enable ingress for the container app"
              }
            },
            "targetPort": {
              "type": "int",
              "defaultValue": "[parameters('port')]",
              "metadata": {
                "description": "The target port for ingress"
              }
            },
            "ingressTrafficType": {
              "type": "string",
              "defaultValue": "external",
              "allowedValues": [
                "external",
                "internal"
              ],
              "metadata": {
                "description": "The ingress traffic type"
              }
            },
            "ingressTransport": {
              "type": "string",
              "defaultValue": "auto",
              "allowedValues": [
                "http",
                "http2",
                "auto"
              ],
              "metadata": {
                "description": "The ingress transport protocol"
              }
            },
            "ingressAllowInsecure": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Whether to allow insecure connections"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "managedEnvironmentId": "[parameters('containerAppEnvironmentId')]",
                "configuration": {
                  "activeRevisionsMode": "single",
                  "ingress": "[if(parameters('ingressEnabled'), createObject('external', equals(parameters('ingressTrafficType'), 'external'), 'targetPort', parameters('targetPort'), 'transport', parameters('ingressTransport'), 'allowInsecure', parameters('ingressAllowInsecure'), 'traffic', createArray(createObject('weight', 100, 'latestRevision', true()))), null())]",
                  "secrets": [
                    {
                      "name": "postgres-connection-string",
                      "value": "[parameters('postgresConnectionString')]"
                    },
                    {
                      "name": "encryption-key",
                      "value": "[parameters('encryptionKey')]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "name": "n8n",
                      "image": "[parameters('containerImage')]",
                      "resources": {
                        "cpu": "[json(parameters('cpuCore'))]",
                        "memory": "[format('{0}Gi', parameters('memorySize'))]"
                      },
                      "env": [
                        {
                          "name": "DB_TYPE",
                          "value": "postgresdb"
                        },
                        {
                          "name": "DB_POSTGRESDB_DATABASE",
                          "value": "n8n"
                        },
                        {
                          "name": "DB_POSTGRESDB_HOST",
                          "value": "placeholder-will-be-extracted-from-connection-string"
                        },
                        {
                          "name": "DB_POSTGRESDB_PORT",
                          "value": "5432"
                        },
                        {
                          "name": "DB_POSTGRESDB_USER",
                          "value": "placeholder-will-be-extracted-from-connection-string"
                        },
                        {
                          "name": "DB_POSTGRESDB_PASSWORD",
                          "secretRef": "postgres-connection-string"
                        },
                        {
                          "name": "N8N_ENCRYPTION_KEY",
                          "secretRef": "encryption-key"
                        },
                        {
                          "name": "N8N_PORT",
                          "value": "[string(parameters('port'))]"
                        },
                        {
                          "name": "N8N_PROTOCOL",
                          "value": "https"
                        },
                        {
                          "name": "NODE_ENV",
                          "value": "production"
                        },
                        {
                          "name": "WEBHOOK_URL",
                          "value": "[format('https://{0}.{1}', parameters('name'), reference(parameters('containerAppEnvironmentId')).defaultDomain)]"
                        },
                        {
                          "name": "GENERIC_TIMEZONE",
                          "value": "UTC"
                        }
                      ],
                      "probes": [
                        {
                          "type": "liveness",
                          "httpGet": {
                            "path": "/healthz",
                            "port": "[parameters('port')]"
                          },
                          "initialDelaySeconds": 30,
                          "periodSeconds": 10,
                          "failureThreshold": 3
                        },
                        {
                          "type": "readiness",
                          "httpGet": {
                            "path": "/healthz",
                            "port": "[parameters('port')]"
                          },
                          "initialDelaySeconds": 5,
                          "periodSeconds": 10
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": "[parameters('minReplicas')]",
                    "maxReplicas": "[parameters('maxReplicas')]",
                    "rules": [
                      {
                        "name": "http-rule",
                        "http": {
                          "metadata": {
                            "concurrentRequests": "10"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "fqdn": {
              "type": "string",
              "value": "[if(and(parameters('ingressEnabled'), equals(parameters('ingressTrafficType'), 'external')), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-01').configuration.ingress.fqdn, '')]"
            },
            "url": {
              "type": "string",
              "value": "[if(and(parameters('ingressEnabled'), equals(parameters('ingressTrafficType'), 'external')), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-01').configuration.ingress.fqdn), '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'container-app-environment-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'postgres-private-endpoint-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'postgresql-deployment')]"
      ]
    }
  ],
  "outputs": {
    "n8nUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'n8n-container-app-deployment'), '2022-09-01').outputs.url.value]"
    },
    "postgresServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql-deployment'), '2022-09-01').outputs.serverFqdn.value]"
    },
    "postgresServerName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql-deployment'), '2022-09-01').outputs.serverName.value]"
    },
    "postgresDatabaseName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresql-deployment'), '2022-09-01').outputs.databaseName.value]"
    }
  }
}